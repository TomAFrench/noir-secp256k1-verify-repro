{"debug_symbols":[{"locations":{"160":[{"span":{"start":425,"end":486},"file":0},{"span":{"start":175,"end":257},"file":0}],"161":[{"span":{"start":499,"end":514},"file":0}]}}],"file_map":{"0":{"source":"use dep::std;\n\n\nfn validateSignature(\n    publicKeyX: [u8; 32],\n    publicKeyY: [u8; 32],\n    signature: [u8; 64] ,\n    message: [u8; 32]\n) -> bool {\n    let validSignature = std::ecdsa_secp256k1::verify_signature(publicKeyX, publicKeyY, signature, message);\n    validSignature\n}\n\nfn main(\n    publicKeyX: [u8; 32],\n    publicKeyY: [u8; 32],\n    signature: [u8; 64] ,\n    message: [u8; 32]\n) {\n    \n    let valid_signature = validateSignature(publicKeyX, publicKeyY, signature, message);\n    assert(valid_signature);\n}\n\n\n\n\n#[test]\nfn test_main() {\n    main(\n    [145,7,61,84,21,147,70,213,213,228,87,25,211,212,235,102,143,215,59,15,24,4,106,23,1,248,163,180,196,254,214,212], \n[241,7,119,26,119,10,46,247,145,181,77,166,112,94,4,158,229,38,252,43,221,87,74,88,66,249,73,236,86,30,113,179], \n[11, 81, 40, 151, 7, 0, 24, 172, 53, 249, 94, 216, 87, 183, 198, 129, 222, 124, 158, 77, 15, 43, 158, 53, 129, 107, 229, 139, 92, 124, 76, 223, 228, 60, 163, 251, 149, 150, 215, 232, 46, 199, 80, 42, 240, 117, 199, 17, 193, 202, 94, 252, 202, 184, 31, 45, 81, 113, 116, 105, 152, 188, 223, 158], \n[159,134,208,129,136,76,125,101,154,47,234,160,197,90,208,21,163,191,79,27,43,11,130,44,209,93,108,21,176,240,10,8],     );\n    \n}\n\n\n\n#[test]\n\nfn test_valid_signature() {\n    let result = validateSignature(\n    [145,7,61,84,21,147,70,213,213,228,87,25,211,212,235,102,143,215,59,15,24,4,106,23,1,248,163,180,196,254,214,212], \n[241,7,119,26,119,10,46,247,145,181,77,166,112,94,4,158,229,38,252,43,221,87,74,88,66,249,73,236,86,30,113,179], \n[11, 81, 40, 151, 7, 0, 24, 172, 53, 249, 94, 216, 87, 183, 198, 129, 222, 124, 158, 77, 15, 43, 158, 53, 129, 107, 229, 139, 92, 124, 76, 223, 228, 60, 163, 251, 149, 150, 215, 232, 46, 199, 80, 42, 240, 117, 199, 17, 193, 202, 94, 252, 202, 184, 31, 45, 81, 113, 116, 105, 152, 188, 223, 158], \n[159,134,208,129,136,76,125,101,154,47,234,160,197,90,208,21,163,191,79,27,43,11,130,44,209,93,108,21,176,240,10,8],     );\n    std::println(result);\n    assert(result == true);\n}\n","path":"/home/blaze/Playground/NodeJS/noir-secp256k1-repro/secp_verify/src/main.nr"}},"warnings":[]}